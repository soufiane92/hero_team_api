{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Info</p> <p>More information in HERO TEAM API GitHub repository</p>"},{"location":"mkdocs/","title":"How to add documentation","text":""},{"location":"mkdocs/#how-to-enrich-the-documentation","title":"How to enrich the documentation","text":"<p>We are using mkdocs to generate our documentation. the purpose is to automate as much as possible the job and to deploy it automatically to GitHub.</p> <p>Mkdocs documentation can be found here</p>"},{"location":"mkdocs/#in-a-nutshell","title":"In a nutshell","text":"<ul> <li>Add any new pages in the yml file mkdocs.yml located at the project root folder</li> <li>All pages are written in markdown described here</li> <li>To build documentation and access logs for warnings and errors, you can execute <code>mkdocs build</code></li> <li>To generate the documentation, execute the following command <code>mkdocs gh-deploy</code> </li> </ul> <p>Info</p> <ul> <li><code>gh-deploy</code> might fail pushing the result to github pages, it can be solved by</li> <li>pushing the branch gh-pages yourself.</li> </ul>"},{"location":"PROJECT_ITEMS/logging/","title":"Logging","text":""},{"location":"PROJECT_ITEMS/logging/#logging","title":"Logging","text":""},{"location":"PROJECT_ITEMS/logging/#general-overview","title":"General overview","text":"<p>Logs are generated across the entire application. They are sent to <code>stdout</code> and <code>stderr</code> by the python logger package. Logs are in a json format to facilitate the log recognition and manipulation later on.</p>"},{"location":"PROJECT_ITEMS/logging/#python","title":"Python","text":"<p>A logger class is present in <code>app/utils</code>. In order to use a logger, the dev need to call the <code>get_code_logger</code> method and to define a logger name. Then he can just call it</p>"},{"location":"TEAM_SECTION/dev/dev_setup/dev_setup/","title":"Scope","text":"<p>This document intends to guide one newcomer:</p> <ul> <li>from one blank configuration,</li> <li>to a \"ready-to-rumble\" development setup.</li> </ul>"},{"location":"TEAM_SECTION/dev/dev_setup/pycharm_plugins/","title":"Configure PyCharm plugins","text":"<p>Tips</p> <p>Most plugins configuration require to be made from Pycharm <code>File -&gt; Settings -&gt; Tools</code> menu.</p>"},{"location":"TEAM_SECTION/dev/dev_setup/pycharm_plugins/#plugins","title":"Plugins","text":"<ul> <li><code>Ruff</code> An extremely fast Python linter and code formatter</li> </ul>"},{"location":"TEAM_SECTION/dev/dev_setup/dev_first_steps/github_repo_cloning/","title":"Create your local clone of the project remote repository","text":"<ul> <li>Open PyCharm</li> <li><code>Get from VCS</code> (Version Control System)</li> <li>Repository selection</li> <li>Select <code>GitHub</code> connection features</li> <li> <p>Pick a local path to clone selected remote repository </p> </li> <li> <p>Then, select <code>Clone</code></p> </li> </ul>"},{"location":"TEAM_SECTION/dev/dev_setup/pycharm_plugins/ruff/","title":"Ruff Plugin","text":""},{"location":"TEAM_SECTION/dev/dev_setup/pycharm_plugins/ruff/#why-do-we-use-it","title":"Why do we use it ?","text":"<p><code>Ruff</code> is used to quickly find and fix common errors and style issues in Python code, ensuring consistency and quality.</p>"},{"location":"TEAM_SECTION/dev/dev_setup/pycharm_plugins/ruff/#pre-requisities","title":"Pre-requisities","text":"<ul> <li> <p>Installing <code>Ruff</code> plugin from the PyCHarm Marketplace is the easiest and most effective way to integrate it into the PyCharm workflow. First you need to install the plugin from the Pycharm <code>File -&gt; Settings -&gt; Plugins</code> </p> </li> <li> <p>You will also need to install the <code>Ruff</code> library into your project's virtual environment.</p> </li> </ul> <p>Note</p> <p>For further details, see plugin web page Ruff linter</p>"},{"location":"TEAM_SECTION/dev/dev_setup/pycharm_plugins/ruff/#plugin-configuration","title":"Plugin configuration","text":"<p>Note</p> <p>Under construction !</p>"}]}